[mypy]
#############
# visual and config checks
#############
# next one also covered by strict=True
warn_unused_configs=True

###############
#https://mypy.readthedocs.io/en/stable/command_line.html#disallow-dynamic-typing
###############
# how is the next one different from warn_return_any
disallow_any_expr=True
disallow_any_unimported=True
# next one also covered by strict=True
# next one gives: interfaces.py:15:5: error: Type of decorated function contains type "Any" ("Callable[[I[T1, T2, T3], Any, Any], T3]")
disallow_any_decorated=True
disallow_any_explicit=True
# next one also covered by strict=True
disallow_any_generics=True
# next one also covered by strict=True
disallow_subclassing_any=True

###############
#https://mypy.readthedocs.io/en/stable/command_line.html#untyped-definitions-and-calls
###############
# next one also covered by strict=True
disallow_untyped_calls=True
# next one also covered by strict=True
disallow_untyped_defs=True
# next one also covered by strict=True
#disallow_incomplete_defs=True - not needed if disallow_untyped_defs used
disallow_untyped_decorators=True

###############
#https://mypy.readthedocs.io/en/stable/command_line.html#none-and-optional-handling
###############
# next one also covered by strict=True
no_implicit_optional=True

###############
#https://mypy.readthedocs.io/en/stable/command_line.html#configuring-warnings
###############
# next one also covered by strict=True
warn_redundant_casts=True
# next one also covered by strict=True
warn_unused_ignores=True
#no_warn_no_return=True - doesn't seem to be of any use if using disallow_untyped_defs
# next one also covered by strict=True
warn_return_any=True
warn_unreachable=True

###############
#https://mypy.readthedocs.io/en/stable/command_line.html#miscellaneous-strictness-flags
###############
allow_untyped_globals=False
# I'd rather have this one as False, although I haven't seen the effect of having it as True yet
allow_redefinition=False
# IIUC, this forces type annotation on class members such as a = None
local_partial_types=True
# next one also covered by strict=True
# I don't see the problem with re-export - imo they allow to control what a client api sees (certainly in Haskell)
no_implicit_reexport=True
# next one also covered by strict=True
# this restricts comparisons to objects of the same type IIUC
strict_equality=True

###############
#https://mypy.readthedocs.io/en/stable/command_line.html#configuring-error-messages
###############
show_error_context=True
show_column_numbers=True
# this is visual clutter - would normally switch it off and to be used ad-hoc outside of mypy.ini when debugging
show_error_codes=True
pretty=True
no_color_output=False
no_error_summary=False
show_absolute_path=False

###############
#https://mypy.readthedocs.io/en/stable/command_line.html#incremental-mode
###############
# note done yet

###############
#https://mypy.readthedocs.io/en/stable/command_line.html#advanced-options
###############
# note done yet

###############
#https://mypy.readthedocs.io/en/stable/command_line.html#report-generation
###############
# note done yet


###############
#https://mypy.readthedocs.io/en/stable/command_line.html#miscellaneous
###############
# note done yet
